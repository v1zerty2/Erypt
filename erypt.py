import sqlite3
from aiogram import Bot, Dispatcher, types, executor
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
import random
import asyncio

# –¢–æ–∫–µ–Ω –≤–∞—à–µ–≥–æ –±–æ—Ç–∞
TOKEN = '7031454856:AAHiAfS-S1YaBK54ykY4UIoLe39UP37Fc7w'

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö
conn = sqlite3.connect('currency_exchange.db')
cursor = conn.cursor()

# –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, –µ—Å–ª–∏ –æ–Ω–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
cursor.execute('''
    CREATE TABLE IF NOT EXISTS users (
        user_id INTEGER PRIMARY KEY,
        balance INTEGER DEFAULT 0
    )
''')
conn.commit()

# –°–æ–∑–¥–∞–Ω–∏–µ –±–æ—Ç–∞ –∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞
bot = Bot(token=TOKEN)
dp = Dispatcher(bot)

import time

# –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Ç–µ–∫—É—â–µ–≥–æ –∫—É—Ä—Å–∞ –∏ –≤—Ä–µ–º–µ–Ω–∏ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫—É—Ä—Å–∞
current_rate = 10.00  # –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é 1 ERYPT = 10 —Ä—É–±–ª–µ–π
last_rate_update = time.time()

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫—É—Ä—Å–∞ –∫–∞–∂–¥—ã–π —á–∞—Å
def update_rate():
    global current_rate, last_rate_update
    while True:
        time.sleep(30)  # 3600 —Å–µ–∫—É–Ω–¥ = 1 —á–∞—Å
        current_rate += 1.2  # –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –∫—É—Ä—Å –Ω–∞ 10 –∫–æ–ø–µ–µ–∫
        last_rate_update = time.time()

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –æ–±–Ω—É–ª–µ–Ω–∏—è –∫—É—Ä—Å–∞ –∫–∞–∂–¥—ã–µ 24 —á–∞—Å–∞
def reset_rate():
    global current_rate, last_rate_update
    while True:
        time.sleep(120)  # 86400 —Å–µ–∫—É–Ω–¥ = 24 —á–∞—Å–∞
        current_rate = 10.00  # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –∫—É—Ä—Å –∫ –Ω–∞—á–∞–ª—å–Ω–æ–º—É –∑–Ω–∞—á–µ–Ω–∏—é
        last_rate_update = time.time()
user_states = {}
CREATOR_ID = 6832231878
# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /output_money


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /obnul_b –¥–ª—è –æ–±–Ω—É–ª–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
@dp.message_handler(commands=['obnul_b'])
async def reset_balance(message: types.Message):
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∫–æ–º–∞–Ω–¥—É –≤–≤–µ–ª —Å–æ–∑–¥–∞—Ç–µ–ª—å –±–æ—Ç–∞
    if message.from_user.id != 6832231878:
        await message.answer("–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –Ω–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.")
        return

    try:
        # –†–∞–∑–±–∏–≤–∞–µ–º –∞—Ä–≥—É–º–µ–Ω—Ç—ã –∫–æ–º–∞–Ω–¥—ã
        _, user_id = message.text.split()
        user_id = int(user_id)

        # –û–±–Ω–æ–≤–ª—è–µ–º –±–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        cursor.execute("UPDATE users SET balance=0 WHERE user_id=?", (user_id,))
        conn.commit()

        await message.answer(f"–ë–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å ID {user_id} —É—Å–ø–µ—à–Ω–æ –æ–±–Ω—É–ª–µ–Ω.")
    except (ValueError, IndexError):
        await message.answer("–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –∫–æ–º–∞–Ω–¥—ã. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /obnul_b [ID_–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è]")





# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /send –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤–∞–ª—é—Ç—ã –¥—Ä—É–≥–æ–º—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
@dp.message_handler(commands=['send'])
async def send_currency(message: types.Message):
    user_id = message.from_user.id

    try:
        # –†–∞–∑–±–∏–≤–∞–µ–º –∞—Ä–≥—É–º–µ–Ω—Ç—ã –∫–æ–º–∞–Ω–¥—ã
        _, receiver_id, amount = message.text.split()
        receiver_id = int(receiver_id)
        amount = int(amount)

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Å—É–º–º–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –Ω–µ–æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–∞—è
        if amount < 0:
            await message.answer("–ù–µ–≤–µ—Ä–Ω–∞—è —Å—É–º–º–∞ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏.")
            return

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤
        cursor.execute("SELECT balance FROM users WHERE user_id=?", (user_id,))
        sender_balance = cursor.fetchone()
        if not sender_balance or sender_balance[0] < amount:
            await message.answer("–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏.")
            return

        # –û–±–Ω–æ–≤–ª—è–µ–º –±–∞–ª–∞–Ω—Å –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è
        cursor.execute("UPDATE users SET balance=balance-? WHERE user_id=?", (amount, user_id))

        # –û–±–Ω–æ–≤–ª—è–µ–º –±–∞–ª–∞–Ω—Å –ø–æ–ª—É—á–∞—Ç–µ–ª—è
        cursor.execute("INSERT OR IGNORE INTO users (user_id) VALUES (?)", (receiver_id,))
        cursor.execute("UPDATE users SET balance=balance+? WHERE user_id=?", (amount, receiver_id))

        # –§–∏–∫—Å–∏—Ä—É–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
        conn.commit()

        await message.answer(f"–í—ã —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏–ª–∏ {amount} ERYPT –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å ID {receiver_id}.")
    except (ValueError, IndexError):
        await message.answer("–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –∫–æ–º–∞–Ω–¥—ã. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /send [ID_–ø–æ–ª—É—á–∞—Ç–µ–ª—è] [—Å—É–º–º–∞]. ID –ø–æ–ª—É—á–∞—Ç–µ–ª—è –≤—ã –º–æ–∂–µ—Ç–µ —É–∑–Ω–∞—Ç—å, –Ω–∞–∂–∞–≤ /start –≤ –±–æ—Ç–µ @getmyid_bot")





# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /buy –¥–ª—è –ø–æ–∫—É–ø–∫–∏ –≤–∞–ª—é—Ç—ã
@dp.message_handler(commands=['buy'])
async def buy_currency(message: types.Message):
    user_id = message.from_user.id

    try:
        # –†–∞–∑–±–∏–≤–∞–µ–º –∞—Ä–≥—É–º–µ–Ω—Ç—ã –∫–æ–º–∞–Ω–¥—ã
        _, amount = message.text.split()
        amount = int(amount)

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Å—É–º–º–∞ –ø–æ–∫—É–ø–∫–∏ –Ω–µ–æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–∞—è
        if amount < 0:
            await message.answer("–ù–µ–≤–µ—Ä–Ω–∞—è —Å—É–º–º–∞ –¥–ª—è –ø–æ–∫—É–ø–∫–∏.")
            return

        # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –Ω–æ–º–µ—Ä –∑–∞–∫–∞–∑–∞
        order_id = random.randint(1000, 9999)

        # –°–æ–∑–¥–∞–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—É—é —Å—Å—ã–ª–∫—É –¥–ª—è –æ–ø–ª–∞—Ç—ã
        payment_link = f"https://donationalerts.com/r/v1zerty1?alert=1&comment=eryt_purchase_{order_id}"

        # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–æ–π "–Ø –æ–ø–ª–∞—Ç–∏–ª"
        keyboard = InlineKeyboardMarkup()
        keyboard.add(InlineKeyboardButton("üöÄ –Ø –æ–ø–ª–∞—Ç–∏–ª, –∑–∞—è–≤–∫–∞ –Ω–∞ –æ–¥–æ–±—Ä–µ–Ω–∏–µ", callback_data=f"approve_{amount}"))

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Å—Å—ã–ª–∫–æ–π –∏ –∫–Ω–æ–ø–∫–æ–π
        await message.answer(f"–í–∞—à –∑–∞–∫–∞–∑ –Ω–∞ –ø–æ–∫—É–ø–∫—É {amount} ERYPT –ø—Ä–∏–Ω—è—Ç. –û–ø–ª–∞—Ç–∏—Ç–µ –µ–≥–æ –ø–æ —Å—Å—ã–ª–∫–µ: {payment_link}",
                             reply_markup=keyboard)


    except (ValueError, IndexError):
        await message.answer("–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –∫–æ–º–∞–Ω–¥—ã. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /buy [—Å—É–º–º–∞]")


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /add_b –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å 

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /help –¥–ª—è –≤—ã–≤–æ–¥–∞ —Å–ø–∏—Å–∫–∞ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥
@dp.message_handler(commands=['help'])
async def help_command(message: types.Message):
    help_text = ("–°–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥:\n"
                 "/start - –Ω–∞—á–∞—Ç—å –¥–∏–∞–ª–æ–≥\n"
                 "/balance - –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –±–∞–ª–∞–Ω—Å\n"
                 "/send [ID_–ø–æ–ª—É—á–∞—Ç–µ–ª—è] [—Å—É–º–º–∞] - –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –≤–∞–ª—é—Ç—É\n"
                 "/buy [—Å—É–º–º–∞] - –∫—É–ø–∏—Ç—å –≤–∞–ª—é—Ç—É\n"
                 "/curs - –£–∑–Ω–∞—Ç—å –∫—É—Ä—Å ERYPT (–°–∫–æ–ª—å–∫–æ —Å—Ç–æ–∏—Ç 1 ERYPT.)")
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–º–∞–Ω–¥—É –æ–±–Ω—É–ª–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞, –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å - —Å–æ–∑–¥–∞—Ç–µ–ª—å –±–æ—Ç–∞
    if message.from_user.id == 6832231878:
        help_text += "/obnul_b [ID_–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è] - –æ–±–Ω—É–ª–∏—Ç—å –±–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è\n"
    if message.from_user.id == 6832231878:
        help_text +="/add_b [ID] - –î–æ–±–∞–≤–∏—Ç—å –±–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é.\n"
    if message.from_user.id == 6832231878:
        help_text += "/obnul_curs [–°–£–ú–ú–ê] - –û–±–Ω—É–ª–∏—Ç—å –∫—É—Ä—Å.\n"

    await message.answer(help_text)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /add_b –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
@dp.message_handler(commands=['add_b'])
async def add_balance(message: types.Message):
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∫–æ–º–∞–Ω–¥—É –≤–≤–µ–ª —Å–æ–∑–¥–∞—Ç–µ–ª—å –±–æ—Ç–∞
    if message.from_user.id != 6832231878:
        await message.answer("–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –Ω–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.")
        return

    try:
        # –†–∞–∑–±–∏–≤–∞–µ–º –∞—Ä–≥—É–º–µ–Ω—Ç—ã –∫–æ–º–∞–Ω–¥—ã
        command_parts = message.text.split()
        if len(command_parts) != 3:
            raise ValueError("–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –∫–æ–º–∞–Ω–¥—ã.")

        _, user_id, amount = command_parts
        user_id = int(user_id)
        amount = int(amount)

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Å—É–º–º–∞ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω–µ–æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–∞—è
        if amount < 0:
            await message.answer("–ù–µ–≤–µ—Ä–Ω–∞—è —Å—É–º–º–∞ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è.")
            return

        # –û–±–Ω–æ–≤–ª—è–µ–º –±–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        cursor.execute("INSERT OR IGNORE INTO users (user_id) VALUES (?)", (user_id,))
        cursor.execute("UPDATE users SET balance=balance+? WHERE user_id=?", (amount, user_id))
        conn.commit()

        # –ü–æ–ª—É—á–∞–µ–º —é–∑–µ—Ä–Ω–µ–π–º –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞
        moderator_username = message.from_user.username

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –æ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–∏ –±–∞–ª–∞–Ω—Å–∞
        await bot.send_message(user_id, f"‚úÖ –ü–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞ –Ω–∞ —Å—É–º–º—É: {amount} ERYPT. –ú–æ–¥–µ—Ä–∞—Ç–æ—Ä: @{moderator_username}")

        await message.answer(f"–ë–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å ID {user_id} —É—Å–ø–µ—à–Ω–æ –ø–æ–ø–æ–ª–Ω–µ–Ω –Ω–∞ {amount} ERYPT. "
                             f"–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä: @{moderator_username}")
    except (ValueError, IndexError):
        await message.answer("–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –∫–æ–º–∞–Ω–¥—ã. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /add_b [ID_–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è] [—Å—É–º–º–∞]")



# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /add_money –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
@dp.message_handler(commands=['add_money'])
async def add_money(message: types.Message):
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∫–æ–º–∞–Ω–¥—É –≤–≤–µ–ª —Å–æ–∑–¥–∞—Ç–µ–ª—å –±–æ—Ç–∞
    if message.from_user.id != 6832231878:
        await message.answer("–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –Ω–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.")
        return

    try:
        # –†–∞–∑–±–∏–≤–∞–µ–º –∞—Ä–≥—É–º–µ–Ω—Ç—ã –∫–æ–º–∞–Ω–¥—ã
        _, user_id, amount = message.text.split()
        user_id = int(user_id)
        amount = int(amount)

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Å—É–º–º–∞ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω–µ–æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–∞—è
        if amount < 0:
            await message.answer("–ù–µ–≤–µ—Ä–Ω–∞—è —Å—É–º–º–∞ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è.")
            return

        # –û–±–Ω–æ–≤–ª—è–µ–º –±–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        cursor.execute("INSERT OR IGNORE INTO users (user_id) VALUES (?)", (user_id,))
        cursor.execute("UPDATE users SET balance=balance+? WHERE user_id=?", (amount, user_id))
        conn.commit()

        # –ü–æ–ª—É—á–∞–µ–º —é–∑–µ—Ä–Ω–µ–π–º –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞
        moderator_username = message.from_user.username

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –æ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–∏ –±–∞–ª–∞–Ω—Å–∞
        await bot.send_message(user_id, f"‚úÖ –ü–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞ –Ω–∞ —Å—É–º–º—É: {amount} ERYPT. –ú–æ–¥–µ—Ä–∞—Ç–æ—Ä: @{moderator_username}")

        await message.answer(f"–ë–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å ID {user_id} —É—Å–ø–µ—à–Ω–æ –ø–æ–ø–æ–ª–Ω–µ–Ω –Ω–∞ {amount} ERYT. "
                             f"–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä: @{moderator_username}")
    except (ValueError, IndexError):
        await message.answer("–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –∫–æ–º–∞–Ω–¥—ã. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /add_money [ID_–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è] [—Å—É–º–º–∞]")


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /curs –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ç–µ–∫—É—â–µ–≥–æ –∫—É—Ä—Å–∞
@dp.message_handler(commands=['curs'])
async def show_rate(message: types.Message):
    global current_rate
    await message.answer(f"–¢–µ–∫—É—â–∏–π –∫—É—Ä—Å: 1 ERYPT = 1 —Ä—É–±–ª—å ‚âà 0.011 $")

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /obnul_curs –¥–ª—è —Å–±—Ä–æ—Å–∞ –∫—É—Ä—Å–∞ (—Ç–æ–ª—å–∫–æ –¥–ª—è —Å–æ–∑–¥–∞—Ç–µ–ª—è –±–æ—Ç–∞)
@dp.message_handler(commands=['obnul_curs'])
async def reset_rate_command(message: types.Message):
    if message.from_user.id != 6832231878:  # ID —Å–æ–∑–¥–∞—Ç–µ–ª—è –±–æ—Ç–∞
        await message.answer("–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –Ω–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.")
        return
    
    try:
        _, new_rate = message.text.split()
        new_rate = float(new_rate)
        global current_rate
        current_rate = new_rate
        await message.answer(f"–ö—É—Ä—Å —É—Å–ø–µ—à–Ω–æ —Å–±—Ä–æ—à–µ–Ω –Ω–∞ {new_rate} —Ä—É–±–ª–µ–π.")
    except ValueError:
        await message.answer("–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –∫–æ–º–∞–Ω–¥—ã. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /obnul_curs [–Ω–æ–≤—ã–π_–∫—É—Ä—Å]")

# –î–æ–±–∞–≤–ª—è–µ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–π –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∏ —Å–±—Ä–æ—Å–∞ –∫—É—Ä—Å–∞ –≤ –±–ª–æ–∫–µ __main__
if __name__ == '__main__':
    # –ó–∞–ø—É—Å–∫–∞–µ–º –Ω–æ–≤—ã–µ –ø–æ—Ç–æ–∫–∏ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∏ —Å–±—Ä–æ—Å–∞ –∫—É—Ä—Å–∞
    import threading
    threading.Thread(target=update_rate, daemon=True).start()
    threading.Thread(target=reset_rate, daemon=True).start()






# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /balance
@dp.message_handler(commands=['balance'])
async def balance(message: types.Message):
    user_id = message.from_user.id

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –∑–∞–ø–∏—Å—å –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    cursor.execute("SELECT balance FROM users WHERE user_id=?", (user_id,))
    result = cursor.fetchone()

    # –ï—Å–ª–∏ –∑–∞–ø–∏—Å—å –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç, –¥–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å –Ω—É–ª–µ–≤—ã–º –±–∞–ª–∞–Ω—Å–æ–º
    if not result:
        cursor.execute("INSERT INTO users (user_id, balance) VALUES (?, 0)", (user_id,))
        conn.commit()

    # –ü–æ–ª—É—á–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    cursor.execute("SELECT balance FROM users WHERE user_id=?", (user_id,))
    balance_amount = cursor.fetchone()[0]
    
    await message.answer(f"–í–∞—à —Ç–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å: {balance_amount} ERYPT")

import os

# –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é
current_dir = os.path.dirname(os.path.abspath(__file__))


# –ü–æ–ª–Ω—ã–π –ø—É—Ç—å –∫ —Ñ–∞–π–ª—É ghh.txt
file_path = "/storage/emulated/0/Download/base_d.txt"
# –°–ø–∏—Å–æ–∫ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è ID —É–∂–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
processed_users = []

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
@dp.message_handler(commands=['start'])
async def start(message: types.Message):
    await message.answer("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –æ–±–º–µ–Ω–Ω–∏–∫ –≤–∞–ª—é—Ç—ã ERYT (–µ–π—Ñ—Ä–∏—Ç)!\n"
                         "–£ –≤–∞—Å –Ω–∞ —Å—á–µ—Ç—É 0 ERYPT. –í—ã –º–æ–∂–µ—Ç–µ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å, –ø–æ–ª—É—á–∞—Ç—å –∏ –ø–æ–∫—É–ø–∞—Ç—å –≤–∞–ª—é—Ç—É. –í–≤–µ–¥–∏—Ç–µ /help , —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥.")
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –Ω–æ–≤–æ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ —Å–æ–∑–¥–∞—Ç–µ–ª—é –±–æ—Ç–∞
    if message.from_user.username and message.from_user.id != 6832231878:  # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —é–∑–µ—Ä–Ω–µ–π–º
        username = message.from_user.username
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ—Ç –ª–∏ —É–∂–µ —Ç–∞–∫–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
        if message.from_user.id not in processed_users:
            with open(file_path, "r") as file:
                for line in file:
                    if username in line:
                        processed_users.append(message.from_user.id)
                        return  # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –µ—Å—Ç—å –≤ —Ñ–∞–π–ª–µ, –ø—Ä–µ—Ä—ã–≤–∞–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É
            # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Ñ–∞–π–ª–µ, –¥–æ–±–∞–≤–ª—è–µ–º –µ–≥–æ
            with open(file_path, "a") as file:
                file.write(f"–ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–¨ @{username}, {message.from_user.id}\n")
                
            await bot.send_message(6832231878, f"‚úÖ –ù–û–í–´–ô –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–¨! @{username}")
            processed_users.append(message.from_user.id)




# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /clear_d –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö (—Ç–æ–ª—å–∫–æ –¥–ª—è —Å–æ–∑–¥–∞—Ç–µ–ª—è –±–æ—Ç–∞)
@dp.message_handler(commands=['clear_d'])
async def clear_database(message: types.Message):
    if message.from_user.id != 6832231878:  # ID —Å–æ–∑–¥–∞—Ç–µ–ª—è –±–æ—Ç–∞
        await message.answer("–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –Ω–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.")
        return
    
    # –û—á–∏—â–∞–µ–º —Ñ–∞–π–ª
    open(file_path, "w").close()
    
    await message.answer("–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –æ—á–∏—â–µ–Ω–∞.")

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã—Ö –∫–æ–º–∞


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–Ω–¥—ã /clear_d –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö (—Ç–æ–ª—å–∫–æ –¥–ª—è —Å–æ–∑–¥–∞—Ç–µ–ª—è –±–æ—Ç–∞)
@dp.message_handler(commands=['clear_d'])
async def clear_database(message: types.Message):
    if message.from_user.id != 6832231878:  # ID —Å–æ–∑–¥–∞—Ç–µ–ª—è –±–æ—Ç–∞
        await message.answer("–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –Ω–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.")
        return
    
    # –û—á–∏—â–∞–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
    cursor.execute("DELETE FROM users")
    conn.commit()
    
    # –û—á–∏—â–∞–µ–º —Ñ–∞–π–ª
    open(file_path, "w").close()
    
    await message.answer("–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –æ—á–∏—â–µ–Ω–∞. –í—Å–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ —É–¥–∞–ª–µ–Ω—ã, –±–∞–ª–∞–Ω—Å—ã —Å–±—Ä–æ—à–µ–Ω—ã.")

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /clear_d –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö (—Ç–æ–ª—å–∫–æ –¥–ª—è —Å–æ–∑–¥–∞—Ç–µ–ª—è –±–æ—Ç–∞)
@dp.message_handler(commands=['clear_d'])
async def clear_database(message: types.Message):
    if message.from_user.id != 6832231878:  # ID —Å–æ–∑–¥–∞—Ç–µ–ª—è –±–æ—Ç–∞
        await message.answer("–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –Ω–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.")
        return
    
    # –û—á–∏—â–∞–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
    cursor.execute("DELETE FROM users")
    conn.commit()
    
    await message.answer("–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –æ—á–∏—â–µ–Ω–∞. –í—Å–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ —É–¥–∞–ª–µ–Ω—ã, –±–∞–ª–∞–Ω—Å—ã —Å–±—Ä–æ—à–µ–Ω—ã.")



# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏–Ω–ª–∞–π–Ω-–∫–Ω–æ–ø–∫–∏ "–Ø –æ–ø–ª–∞—Ç–∏–ª"
@dp.callback_query_handler(lambda callback_query: callback_query.data.startswith('approve_'))
async def approve_payment(callback_query: types.CallbackQuery):
    try:
        # –ü–æ–ª—É—á–∞–µ–º —Å—É–º–º—É –∏–∑ –¥–∞–Ω–Ω—ã—Ö –∫–æ–ª–ª–±—ç–∫–∞
        amount = int(callback_query.data.split('_')[1])

        # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–∞–º–∏ "‚úÖ –û–¥–æ–±—Ä–∏—Ç—å" –∏ "‚õî –û—Ç–∫–∞–∑"
        keyboard = InlineKeyboardMarkup()
        keyboard.row(InlineKeyboardButton("‚úÖ –û–¥–æ–±—Ä–∏—Ç—å", callback_data=f"approve_yes_{amount}"),
                     InlineKeyboardButton("‚õî –û—Ç–∫–∞–∑", callback_data=f"approve_no_{amount}"))

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —Å–æ–∑–¥–∞—Ç–µ–ª—é –±–æ—Ç–∞ –æ –∑–∞—è–≤–∫–µ –Ω–∞ –æ–¥–æ–±—Ä–µ–Ω–∏–µ
        await bot.send_message(6832231878, f"–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ –Ω–∞: {amount} ERYPT.\n"
                                           f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: @{callback_query.from_user.username}",
                               reply_markup=keyboard)

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –æ —Ç–æ–º, —á—Ç–æ –∑–∞—è–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –Ω–∞ –æ–¥–æ–±—Ä–µ–Ω–∏–µ
        await bot.send_message(callback_query.from_user.id, f"–ó–∞—è–≤–∫–∞ –Ω–∞ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞ –Ω–∞ {amount} ERYPT "
                                                             f"–æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –Ω–∞ –æ–¥–æ–±—Ä–µ–Ω–∏–µ.")

    except (ValueError, IndexError):
        await bot.send_message(callback_query.from_user.id, "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –≤–∞—à–µ–≥–æ –∑–∞–ø—Ä–æ—Å–∞.")



# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏–Ω–ª–∞–π–Ω-–∫–Ω–æ–ø–æ–∫ "‚úÖ –û–¥–æ–±—Ä–∏—Ç—å" –∏ "‚õî –û—Ç–∫–∞–∑" –¥–ª—è —Å–æ–∑–¥–∞—Ç–µ–ª—è –±–æ—Ç–∞
@dp.callback_query_handler(lambda callback_query: callback_query.data.startswith('approve_yes_') or
                                                     callback_query.data.startswith('approve_no_'))
async def process_approval(callback_query: types.CallbackQuery):
    try:
        # –ü–æ–ª—É—á–∞–µ–º —Å—É–º–º—É –∏–∑ –¥–∞–Ω–Ω—ã—Ö –∫–æ–ª–ª–±—ç–∫–∞
        data = callback_query.data.split('_')
        amount = int(data[2])
        user_id = callback_query.from_user.id

        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏ "‚úÖ –û–¥–æ–±—Ä–∏—Ç—å"
        if data[1] == 'yes':
            # –û–±–Ω–æ–≤–ª—è–µ–º –±–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            cursor.execute("UPDATE users SET balance=balance+? WHERE user_id=?", (amount, user_id))
            conn.commit()
            await bot.send_message(user_id, f"–ó–∞—è–≤–∫–∞ –Ω–∞ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞ –Ω–∞ {amount} ERYPT –æ–¥–æ–±—Ä–µ–Ω–∞.")

        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏ "‚õî –û—Ç–∫–∞–∑"
        elif data[1] == 'no':
            await bot.send_message(user_id, f"–ó–∞—è–≤–∫–∞ –Ω–∞ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞ –Ω–∞ {amount} ERYPT –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞.")

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞–ø—Ä–æ—Å–∞
        await bot.answer_callback_query(callback_query.id, "–ó–∞–ø—Ä–æ—Å –æ–±—Ä–∞–±–æ—Ç–∞–Ω —É—Å–ø–µ—à–Ω–æ.")

    except (ValueError, IndexError):
        await bot.send_message(callback_query.from_user.id, "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –≤–∞—à–µ–≥–æ –∑–∞–ø—Ä–æ—Å–∞.")


if __name__ == '__main__':
    executor.start_polling(dp, skip_updates=True)
